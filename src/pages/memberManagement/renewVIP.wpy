
<style lang="stylus">
@import "./../../css/public.styl";
.form_box{
  width: 100%;
  height: 100%;
  padding: 0 10px;
  overflow-y: auto; 
  .form_content{
    width: 100%;
    min-height: calc(100% - 50px - 30px);
  }
  .form_list{
    width: 100%;
    height: auto; 
    .list_item{
      width: 100%;
      height: auto;
      border-bottom: 1px solid rgba(25, 31, 37, 0.08);
    }
  }
  .form_submit{
    margin: 15px 0;
  }
}
.item_box{
  width: 100%;
  height: auto;
  .item_title{
    font-size: 12px;
    color: #666666;
    font-weight: 500;
    padding: 20px 0 0px; 
    display: flex;
    &.active{
      &:after{
        content: '*';
        font-size: 14px;
        color: #F33C2E;
        font-weight: 500;
        padding-left: 5px;
      }   
    }
  }
  .input_box{
    width: 100%;
    height: 40px;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
  }
  .item_input{
    width: 100%;
    height: 100%;
  }
  .input_placeholder{
    width: 100%;
    height: 100%;
    color: #D6D6D6;
    font-size: 18px;
  }
}
.picker_box{
  width: 100%;
  height: 40px;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  overflow: hidden;
}
.picker{
  width: 360px;
  height: 40px;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  color: #333333;
}
</style>
<template>
  <div class="form_box">
    <div class="form_content">
      <ul class="form_list">
        <li class="list_item">
          <div class="item_box">
            <text class="item_title">当前等级</text>
            <div class="input_box">
              <div class="picker_box">{{currentLevel}}</div>   
            </div>
          </div>
        </li>
        <li class="list_item">
          <div class="item_box">
            <text class="item_title active">续费等级</text>
            <picker
              class="picker_box"
              value="{{index}}"
              range="{{vipLevelList}}"
              @change="vipLevelId"
              range-key="name"
            >
              <view class="picker">
                {{vipLevelList[index].name}}
              </view>
            </picker>
          </div>
        </li>
        <li class="list_item">
          <div class="item_box">
            <text class="item_title active">续费时间</text>
            <picker
              class="picker_box"
              mode="date"
              start="2021-01-03"
              @change="endTimeFun"
            >
              <view class="picker">{{endTime}}</view>
            </picker>
          </div>
        </li>
      </ul>
    </div>
    <button class="form_btn form_submit" @click="onUserRenewVip()">保存</button>  
  </div>
</template>

<script>
  import wepy from '@wepy/core';
  import store from './../../store';
  import { mapState } from '@wepy/redux';
  import { COMMIT } from './../../store/types';
  import { VipLevelList, userRenewVip } from '../../request/api.js';
  wepy.page({
    store,
    options: {
      addGlobalClass: true
    },
    data: {
      startTime: new Date(),
      query: {
        id: null,
        userId: null,
        vipLevelId: null,
        endTime: ''
      },
      currentLevel:'',//当前等级
      index: 0,//续费等级
      endTime: '',//结束日期
      vipLevelList: [],
    },
    computed: {
      ...mapState([ 'publics' ])
    },
    methods: {
      // 选择续费等级
      vipLevelId(e){
        this.index = e.$wx.detail.value;
        const vip = this.vipLevelList[this.index];
        this.query.vipLevelId = vip.id;
      },
      // 选择结束时间
      endTimeFun(e){
        this.endTime = e.$wx.detail.value;
      },
      // 点击保存  续费
      onUserRenewVip(){
        userRenewVip({
          ...this.query,
          endTime: this.endTime+' 00:00:00',
        }).then(res=>{
          const {code, data, message} = res;
          if(res.code === 10000){
            console.log('res',res)
            wx.showToast({
              title: message,
              icon: 'error',
              duration: 2000,
              complete(){
                setTimeout(()=>{
                  wx.navigateBack({
                    delta: 1
                  })
                },2000)
              }
            })
          }
        })
      },
      // 获取等级列表
      getList(){
        const openid = wx.getStorageSync('openid');
        VipLevelList().then(res=>{
          if(res.code === 10000){
            this.vipLevelList = res.data;
          }
        })
      }
    },
    onLoad(options){
      const { id, userId, vipLevelId, endTime } = options;
      this.query = { id, userId, vipLevelId };
      this.query.endTime = endTime;
      this.endTime = endTime.split(' ')[0];
      this.getList();
    },
    onShow(){
      const { VIPLevel:{ name }} = this.publics;
      this.currentLevel = name;
    },
    onReady(){

    },
    onUnload(){

    },
  });
</script>
<config>
{
  navigationBarTitleText: '续费VIP',
  disableScroll: true,
  usingComponents: {
    "SubInput": './../../components/subInput',
    "UpImage": './../../components/upImage',
  }
}
</config>
