
<style lang="stylus">
@import "./../../css/public.styl";
.form_box{
  width: calc(100% - 20px);
  padding: 0 10px 15px;
  overflow-y: auto;
  .form_content{
    width: 100%;
    min-height: calc(100% - 50px - 15px - 25px);
  }
  .form_head{
    width: 100%;
    height: auto;
    padding: 15px 0;
    border-bottom: 1px solid rgba(25, 31, 37, 0.08); 
    display: flex;
    flex-direction: row;
    justify-content:space-between;
    align-items: center;
    .head_text{
      font-size: 16px;
      color: #333333;
      font-weight: 500;
      &.active{
        &:after{
          content:'*';
          font-size: 16px;
          font-weight: 500;
          color: #F33C2E; 
        }  
      }
    }
    .head_icon{
      width: 15px;
      height: 15px;
      .icon_img {
        width: 100%;
        height: 100%;
      }
    }
  }
  .form_list{
    width: 100%;
    height: auto; 
    .list_item{
      width: 100%;
      height: auto;
      border-bottom: 1px solid rgba(25, 31, 37, 0.08);
    }
  }
  .form_submit{
    margin-top: 15px;
    margin-bottom: 25px;
  }
}
.item_box{
  width: 100%;
  height: auto;
  .item_title{
    font-size: 12px;
    color: #666666;
    font-weight: 500;
    padding: 20px 0 0px; 
    display: flex;
    &.active{
      &:after{
        content: '*';
        font-size: 14px;
        color: #F33C2E;
        font-weight: 500;
        padding-left: 5px;
      }   
    }
  }
  .picker_box{
    width: 100%;
    height: 40px;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    overflow: hidden;
  }
  .picker{
    width: 360px;
    height: 40px;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    color: #333333;
    font-size: 18px;
    &.active{
      color: #D6D6D6; 
    }
  }
}
.input_code{
  width: 16px;
  height: 16px;
  padding: 10px;
}
</style>
<template>
  <scroll-view 
    class="form_box"
    scrollY="{{true}}"
    scrollWithAnimation="{{true}}"
    style="height:{{windowHeight}}px"
  >
    <Toptips 
      msg="{{error}}" 
      show="{{error !== ''}}"
      @MsgFun="msgErrorFun"
    />
    <div class="form_content">
      <!-- 基础信息 -->
      <div class="content_item">
        <div class="form_head" @click="headIcon(1)">
          <text class="head_text active">基础信息</text>
          <div class="head_icon">
            <image class="icon_img"
              src="{{one ?'../../image/top.png':'../../image/bottom.png'}}"
              mode="widthFix" 
            />
          </div>
        </div>
        <ul class="form_list" v-show="one">
          <li class="list_item">
            <div class="item_box">
              <text class="item_title active">品牌</text>
              <picker
                class="picker_box"
                bindchange="bindPickerChange"
                value="{{brandIndex}}"
                range="{{brandArray}}"
                range-key="name"
              >
                <view class="picker">
                  {{brandArray[brandIndex].name}}
                </view>
              </picker>
            </div>
          </li>
          <li class="list_item" v-if="propertyArray.length !== 0">
            <view class="item_box">
              <text class="item_title active">商品属性</text>
              <picker
                class="picker_box"
                mode="selector"
                @change="propertyPickerChange"
                value="{{propertyIndex}}"
                range="{{propertyArray}}"
                range-key="name"
              >
                <view class="picker">
                  {{propertyArray[propertyIndex].name}}
                </view>
              </picker>
            </view>
          </li>
          <li class="list_item" v-if="showArray.length !== 0">
            <div class="item_box">
              <text class="item_title active">商品类型</text>
              <picker
                class="picker_box"
                mode="selector"
                @change="moldPickerChange"
                value="{{moldIndex}}"
                range="{{showArray}}"
                range-key="name"
              >
                <view class="picker">
                  {{showArray[moldIndex].name}}
                </view>
              </picker>
            </div>
          </li>
          <li class="list_item" v-if="info.firstClassId === '1'&&info.secondClassId==='4'">
            <SubInput
              :obj="form.xian"
              @inputBtn="inputBtn"
            />
          </li>
        </ul>
      </div>
      <!-- 商品信息 -->
      <div class="content_item">
        <div class="form_head" @click="headIcon(2)">
          <text class="head_text">商品信息</text>
          <div class="head_icon">
            <image class="icon_img"
              src="{{two ?'../../image/top.png':'../../image/bottom.png'}}"
              mode="widthFix"
            />
          </div>
        </div>
        <ul class="form_list" v-show="two">
          <li class="list_item">
            <SubInput
              :obj="form.name"
              @inputBtn="inputBtn"
            />
          </li>
          <li class="list_item">
            <view class="item_box">
              <text class="item_title">生产日期</text>
              <picker
                class="picker_box"
                mode="date"
                @change="DateProduceTime"
              >
                <view class="picker {{info.produceTime ?'':'active'}}">
                  {{info.produceTime?info.produceTime:'选择生产日期'}}
                </view>
              </picker>
            </view>
          </li>
          <li class="list_item">
            <view class="item_box">
              <text class="item_title">进货日期</text>
              <picker
                class="picker_box"
                mode="date"
                @change="DateStockTime"
              >
                <view class="picker {{info.stockTime?'':'active'}}">
                  {{info.stockTime?info.stockTime:'选择进货日期'}}
                </view>
              </picker>
            </view>
          </li>
          <li class="list_item">
            <view class="item_box">
              <text class="item_title">保质期</text>
              <picker
                class="picker_box"
                mode="date"
                @change="DateExpireTime"
              >
                <view class="picker {{info.expireTime?'':'active'}}">
                  {{info.expireTime?info.expireTime:'选择保质期'}}
                </view>
              </picker>
            </view>
          </li>
          <li class="list_item">
            <SubInput
              :obj="form.safeTime"
              @inputBtn="inputBtn"
            />
          </li>
          <li class="list_item">
            <UpImage
              title="图片"
              :imageFile="info.imgs"
              :Num="3"
              @upImagePath="upImageFile"
            />
          </li>
        </ul>
      </div>
      <!-- 商品参数 -->
      <div class="content_item" v-show="isGoods">
        <div class="form_head" @click="headIcon(4)">
          <text class="head_text">商品参数</text>
          <div class="head_icon">
            <image
              class="icon_img"
              src="{{four ?'../../image/top.png':'../../image/bottom.png'}}"
              mode="widthFix"
            />
          </div>
        </div>
        <ul class="form_list" v-show="four">
          <li class="list_item"
            :key="key"
            v-for="(item,key) in goodsParam"
          >
            <SubInput
              :obj="item"
              @inputBtn="inputBtn"
            />
          </li>
        </ul>
      </div>
      <!-- 商品规格 -->
      <div class="content_item">
        <div class="form_head" @click="headIcon(3)">
          <text class="head_text">商品规格</text>
          <div class="head_icon">
            <image
              class="icon_img"
              src="{{three ?'../../image/top.png':'../../image/bottom.png'}}"
              mode="widthFix"
            />
          </div>
        </div>
        <ul class="form_list" v-show="three">
          <li class="list_item">
            <div class="item_box">
              <text class="item_title active">编号</text>
              <div class="input_box">
                <input 
                  class="item_input"
                  type="text"
                  v-model="info.number"
                  placeholder="请输入编号" 
                  placeholder-class="input_placeholder"
                />
                <image 
                  @click="scanCode()"
                  class="input_code"
                  src="./../../image/codeIcon.png"
                  mode="widthFiX"
                />
              </div>
            </div>
          </li>
          <li 
            class="list_item"
            :key="key"
            v-for="(item,key) in storage"
          >
            <SubInput
              :obj="item"
              @inputBtn="inputBtn"
            />
          </li>
        </ul>
      </div>
    </div>  
    <button
      class="form_btn form_submit"
      @click="formSubmit()"
    >{{formType === '1'? '提交':'保存'}}</button>  
  </scroll-view>
</template>

<script>
  import wepy from '@wepy/core';
  import { goodsUpdate, goodsSave, goodsBrands, goodsPropertiesAndTypes  } from './../../request/api.js';
  wepy.page({
    options: {
      addGlobalClass: true
    },
    data: {
      formType: '1',//1 提交 2 修改保存
      error: '',//提示
      windowHeight: 0,
      one: false,
      two: false,
      three: false,
      four: false,
      brandIndex: 0,
      brandArray: [],
      brandObj: {},
      propertyIndex: 0,
      propertyArray: [],
      propertyObj: {},
      moldIndex: 0,
      moldArray: [],//所有商品类型
      showArray:[],// 需要显示的商品类型
      moldObj: {},//商品类型
      goodsParam: { },//商品参数
      isGoods: false,
      jcspGan:{
        jcspGanJieshu:{
          title: '节数',
          placeholder: '请输入节数',
          Sign: false,
          key: 'jcspGanJieshu'
        },
        jcspGanZizhong:{
          title: '自重',
          placeholder: '请输入自重',
          Sign: false,
          key: 'jcspGanZizhong'
        },
        jcspGanXianjing:{
          title: '先经',
          placeholder: '请输入先经',
          Sign: false,
          key: 'jcspGanXianjing'
        },
        jcspGanYuanjing:{
          title: '元经',
          placeholder: '请输入元经',
          Sign: false,
          key: 'jcspGanYuanjing'
        },
        jcspGanShousuochang:{
          title: '收缩长',
          placeholder: '请输入收缩长',
          Sign: false,
          key: 'jcspGanShousuochang'
        },
        jcspGanShijichang:{
          title: '实际长',
          placeholder: '请输入实际长',
          Sign: false,
          key: 'jcspGanShijichang'
        },
        jcspGanCaizhi:{
          title: '材质',
          placeholder: '请输入材质',
          Sign: false,
          key: 'jcspGanCaizhi'
        },
        jcspGanDiaolizhi:{
          title: '钓力值',
          placeholder: '请输入钓力值',
          Sign: false,
          key: 'jcspGanDiaolizhi'
        },
        jcspGanJiesh:{
          title: '其他',
          placeholder: '请输入其他',
          Sign: false,
          key: 'jcspGanJiesh'
        },
      },
      jcspGou:{
        jcspGouZizhong:{
          title: '自重',
          placeholder: '请输入自重',
          Sign: false,
          key: 'jcspGouZizhong'
        },
        jcspGouZhouchengshu:{
          title: '轴承数',
          placeholder: '请输入轴承数',
          Sign: false,
          key: 'jcspGouZhouchengshu'
        },
        jcspGouZhuansubi:{
          title: '转速比',
          placeholder: '请输入转速比',
          Sign: false,
          key: 'jcspGouZhuansubi'
        },
        jcspGouXianrongliang:{
          title: '线容量',
          placeholder: '请输入线容量',
          Sign: false,
          key: 'jcspGouXianrongliang'
        },
        jcspGouChicun:{
          title: '尺寸',
          placeholder: '请输入尺寸',
          Sign: false,
          key: 'jcspGouChicun'
        },
        jcspGouQita:{
          title: '其他',
          placeholder: '请输入其他',
          Sign: false,
          key: 'jcspGouQita'
        },
      },
      jcspPiao:{
        jcspPiaoCaizhi:{
          title: '材质',
          placeholder: '请输入材质',
          Sign: false,
          key: 'jcspPiaoCaizhi'
        },
        jcspPiaoMushu:{
          title: '目数',
          placeholder: '请输入目数',
          Sign: false,
          key: 'jcspPiaoMushu',
          type: 'digit'
        },
        jcspPiaoXingzhuang:{
          title: '形状',
          placeholder: '请输入形状',
          Sign: false,
          key: 'jcspPiaoXingzhuang'
        },
        jcspPiaoShenchang:{
          title: '身长',
          placeholder: '请输入身长',
          Sign: false,
          key: 'jcspPiaoShenchang',
          type: 'digit'
        },
        jcspPiaoWeichang:{
          title: '尾长',
          placeholder: '请输入尾长',
          Sign: false,
          key: 'jcspPiaoWeichang',
          type: 'digit'
        },
        jcspPiaoJiaochang:{
          title: '脚长',
          placeholder: '请输入脚长',
          Sign: false,
          key: 'jcspPiaoJiaochang',
          type: 'digit'
        },
        jcspPiaoZongchang:{
          title: '总长',
          placeholder: '请输入总长',
          Sign: false,
          key: 'jcspPiaoZongchang',
          type: 'digit'
        },
        jcspPiaoPiaoshenzhijing:{
          title: '漂身直径',
          placeholder: '请输入漂身直径',
          Sign: false,
          key: 'jcspPiaoPiaoshenzhijing'
        },
        jcspPiaoPiaojiaoyuanjing:{
          title: '漂角元经',
          placeholder: '请输入漂角元经',
          Sign: false,
          key: 'jcspPiaoPiaojiaoyuanjing'
        },
        jcspPiaoShiheshuishen:{
          title: '适合水深',
          placeholder: '请输入适合水深',
          Sign: false,
          key: 'jcspPiaoShiheshuishen'
        },
        jcspPiaoYaogoubianse:{
          title: '咬钩变色',
          Sign: false,
          key: 'jcspPiaoYaogoubianse',
          mold: 'radio',
          items: [
            {value: '1', name: '是', checked: 'true'},
            {value: '2', name: '否'},
          ]
        },
      },
      jcspXian:{
        jcspXianXianjing:{
          title: '线径',
          placeholder: '请输入线径',
          Sign: false,
          key: 'jcspXianXianjing'
        },
        jcspXianLali:{
          title: '拉力',
          placeholder: '请输入拉力',
          Sign: false,
          key: 'jcspXianLali'
        },
        jcspXianCaizhi:{
          title: '材质',
          placeholder: '请输入材质',
          Sign: false,
          key: 'jcspXianCaizhi'
        },
      },
      jcspLun:{
        jcspLunZizhong:{
          title: '自重',
          placeholder: '请输入自重',
          Sign: false,
          key: 'jcspLunZizhong',
          type: 'digit'
        },
        jcspLunZhouchengshu:{
          title: '轴承数',
          placeholder: '请输入轴承数',
          Sign: false,
          key: 'jcspLunZhouchengshu',
          type: 'digit'
        },
        jcspLunZhuansubi:{
          title: '转速比',
          placeholder: '请输入转速比',
          Sign: false,
          key: 'jcspLunZhuansubi',
          type: 'digit'
        },
        jcspLunXianrongliang:{
          title: '线容量',
          placeholder: '请输入线容量',
          Sign: false,
          key: 'jcspLunXianrongliang'
        },
        jcspLunChicun:{
          title: '尺寸',
          placeholder: '请输入尺寸',
          Sign: false,
          key: 'jcspLunChicun',
          type: 'digit'
        },
        jcspLunQita:{
          title: '其他',
          placeholder: '请输入其他',
          Sign: false,
          key: 'jcspLunQita'
        },
      },
      jcspErliao:{
        jcspErliaoErliaoleixing:{
          title: '饵料类型',
          placeholder: '请输入饵料类型',
          Sign: false,
          key: 'jcspErliaoErliaoleixing',
          mold: 'picker',
          items:[
            {name:"鲤鱼"},
            {name:"鲫鱼"},
            {name:"其他"},
          ]
        },
      },
      ptzb:{
        ptzbChicun:{
          title: '尺寸',
          placeholder: '请输入尺寸',
          Sign: false,
          key: 'ptzbChicun',
          type: 'digit'
        },
        ptzbBeizhu:{
          title: '备注',
          placeholder: '请输入备注',
          Sign: false,
          key: 'ptzbBeizhu'
        },
      },
      form:{
        name:{
          title: '商品名称',
          placeholder: '请输入商品名称',
          Sign: true,
          key: 'name'
        },
        safeTime:{
          title: '质保时间(月)',
          placeholder: '请输入质保时间',
          Sign: false,
          key: 'safeTime',
          type: 'number'
        },
        xian:{
          title: '线系',
          Sign: false,
          key: 'xianxi',
          mold: 'radio',
          items: [
            {value: '道系', name: '道系', checked: 'true'},
            {value: '子系', name: '子系'},
          ]
        }
      },
      // 商品规格
      storage:{
        model:{
          title: '型号',
          placeholder: '请输入型号',
          Sign: true,
          key: 'model'
        },
        quantity:{
          title: '数量',
          placeholder: '请输入数量',
          Sign: true,
          key: 'quantity',
          type: 'number'
        },
        unitPrice:{
          title: '单价 (进货价)',
          placeholder: '请输入单价',
          Sign: true,
          key: 'unitPrice',
          type: 'digit'
        },
        sellPrice:{
          title: '售卖价格',
          placeholder: '请输入售卖价格',
          Sign: true,
          key: 'sellPrice',
          type: 'digit'
        },
      },
      info:{
        id: '',//商品id
        firstClassId: '',//一级分类id
        secondClassId: '',//二级分类id
        brandId: '',//品牌id
        propertyId: '',//属性id
        typeId: '',//类型id
        number: '',//编号
        name: '',//名称
        produceTime: '',//生产日期
        stockTime: '',//进货日期
        expireTime: '',//保质期
        safeTime:'',
        model: '',//型号
        quantity: '',//数量
        unitPrice: '',//单价
        sellPrice: '',//售卖价格
        imgs: '',//图片 json数据类型字符串
      },
      classQuery:{
        firstClassId: 1,//一级分类id
        secondClassId: 1,//二级分类id
      },
    },
    computed: {

    },
    filters: {
      
    },
    methods: {
      // 
      msgErrorFun(e){
        this.error = e;
      },
      // 生产日期
      DateProduceTime(e){
        this.info.produceTime = e.$wx.detail.value;
      },
      // 进货日期
      DateStockTime(e){
        this.info.stockTime = e.$wx.detail.value;
      },
      // 质保期
      DateExpireTime(e){
        this.info.expireTime = e.$wx.detail.value;
      },
      // 上拉列表
      headIcon(key) {
        switch (key) {
          case 1:
            this.one = !this.one;
            break;
          case 2:
            this.two = !this.two;
            break;
          case 3:
            this.three = !this.three;
            break;
          case 4:
            this.four = !this.four;
            break;
        }
      },
      // 扫码
      scanCode(){
        const that = this;
        wx.scanCode({
          success (res) {
            console.log(res,res.result)
            that.info.number = res.result;
          }
        })
      },
      //选择品牌
      bindPickerChange(e){
        this.brandIndex = e.$wx.detail.value;
        this.brandObj = this.brandArray[this.brandIndex];
        this.info.brandId = this.brandArray[this.brandIndex].id;
      },
      //选择商品属性
      propertyPickerChange(e){
        this.propertyIndex = e.$wx.detail.value;
        this.propertyObj = this.propertyArray[this.propertyIndex];
        this.info.propertyId = this.propertyArray[this.propertyIndex].id;
        if(this.moldArray.length > 0&&this.info.propertyId){
          this.showArray = this.arrayFilter();
        }
      },
      //选择商品类型
      moldPickerChange(e){
        this.moldIndex = e.$wx.detail.value;
        this.moldObj = this.showArray[this.moldIndex];
        this.info.typeId = this.showArray[this.moldIndex].id;
      },
      // inputBtn
      inputBtn(data){
        this.info[data.key] = data.value;
      },
      // 上传图片
      upImageFile(path){
        this.info.imgs = path;
      },
      // 提交
      formSubmit(){
        const formObj = Object.assign(this.form, this.storage, this.goodsParam);
        for (const key in formObj) {
          if (Object.hasOwnProperty.call(formObj, key)) {
            const element = formObj[key];
            const { placeholder, Sign } = element;
            if(Sign && !this.info[key] && this.info[key] === ''){
              this.error = placeholder;
              return;
            }
          }
        }
        if(this.formType === '2'){
          this.goodsUpdate();
        } else {
          this.goodsSaveFun();
        }
      },
      // 更新商品
      goodsUpdate(){
        goodsUpdate({
          ...this.info,
          produceTime: this.info.produceTime? this.info.produceTime + ' 00:00:00':'',
          stockTime: this.info.stockTime? this.info.stockTime+ ' 00:00:00':'',
          expireTime: this.info.expireTime? this.info.expireTime + ' 00:00:00':'',
          safeTime: this.info.safeTime,
        }).then(res => {
          const {code, data, message} = res;
          if(res.code === 10000){
            wx.showToast({
              title: '提交成功',
              icon: 'success',
              duration: 2000,
              complete(){
                setTimeout(()=>{
                  wx.navigateBack({
                    delta: 1
                  })
                },2000)
              }
            })
          } else {
            wx.showToast({
              title: '提交失败',
              icon: 'error',
              duration: 2000
            })
          }
        }).catch(err=> {
          console.log(err)
        })
      },
      // 商品入库
      goodsSaveFun(){
        delete this.info.id;
        goodsSave({
          ...this.info,
          produceTime: this.info.produceTime? this.info.produceTime + ' 00:00:00':'',
          stockTime: this.info.stockTime? this.info.stockTime+ ' 00:00:00':'',
          expireTime: this.info.expireTime? this.info.expireTime + ' 00:00:00':'',
          safeTime: this.info.safeTime,
        }).then(res => {
          const {code, data, message} = res;
          if(res.code === 10000){
            wx.showToast({
              title: '提交成功',
              icon: 'success',
              duration: 2000,
              complete(){
                setTimeout(()=>{
                  wx.navigateBack({
                    delta: 1
                  })
                },2000)
              }
            })
          } else {
            wx.showToast({
              title: '提交失败',
              icon: 'error',
              duration: 2000
            })
          }
        }).catch(err=> {
          console.log(err)
        })
      },
      // 商户的所有品牌
      getGoodsBrands(){
        goodsBrands().then(res => {
          const {code, data, message} = res;
          if(res.code === 10000){
            console.log('res',res)
            this.brandArray = data;
            this.info.brandId = this.brandArray[this.brandIndex].id;
          }
        }).catch(err=> {
          console.log(err)
        })
      },
      // 分类下商品属性及类别
      getGoodsTypes(){
        this.classQuery = {
          firstClassId: this.info.firstClassId,//一级分类id
          secondClassId: this.info.secondClassId,//二级分类id
        };
        goodsPropertiesAndTypes(this.classQuery).then(res => {
          const {code, data, message} = res;
          if(res.code === 10000){
            if(data.goodsClassPropertyList.length !== 0){
              this.propertyArray = data.goodsClassPropertyList;
              this.propertyObj = this.propertyArray[this.propertyIndex];
              this.info.propertyId = this.propertyArray[this.propertyIndex].id;
            }
            if(data.goodsClassTypeList.length !== 0){
              this.moldArray = data.goodsClassTypeList;
              if(this.moldArray.length > 0 &&this.info.propertyId){
                this.showArray = this.arrayFilter();
                this.moldObj = this.showArray[this.moldIndex];
                this.info.typeId = this.showArray[this.moldIndex].id;  
              } else {
                this.showArray = this.moldArray;
              }
            }
          }
        }).catch(err=> {
          console.log(err)
        })
      },
      // 过滤只显示当前的商品类型
      arrayFilter() {
        let arr = this.moldArray.filter(item => item.propertyId === this.info.propertyId)
        return arr;
      },
    },
    onLoad(options){
      console.log('options',options)
      const { firstClassId, secondClassId, type } = options;
      this.formType = type;
      this.info.firstClassId = firstClassId;
      this.info.secondClassId = secondClassId;
      wx.setNavigationBarTitle({
        title: options.title
      })
      const { windowHeight } = wx.getSystemInfoSync();
      this.windowHeight = windowHeight;
      this.goodsParam = {};
      if(firstClassId === '1' && secondClassId === '1'){
        this.goodsParam = this.jcspGan;
      } else if(firstClassId === '1' && secondClassId === '2'){
        this.goodsParam = this.jcspGou;
      } else if(firstClassId === '1' && secondClassId === '3'){
        this.goodsParam = this.jcspPiao;
      } else if(firstClassId === '1' && secondClassId === '4'){
        this.goodsParam = this.jcspXian;
      } else if(firstClassId === '1' && secondClassId === '5'){
        this.goodsParam = this.jcspLun;
      } else if(firstClassId === '1' && secondClassId === '6'){
        this.goodsParam = this.jcspErliao;
      } else if(firstClassId === '2'){
        this.goodsParam = this.ptzb;
      } else if(firstClassId === '3'){
        Object.assign()
      }
      this.isGoods = Object.keys(this.goodsParam).length >0;
    },
    onShow(){
      
    },
    onReady(){
      this.getGoodsBrands();
      this.getGoodsTypes();
    },
    onUnload(){

    },
  });
</script>
<config>
{
  navigationBarTitleText: '',
  disableScroll: true,
  usingComponents: {
    "SubInput": './../../components/subInput',
    "UpImage": './../../components/upImage',
    "Toptips": './../../components/toptips',
  }
}
</config>
