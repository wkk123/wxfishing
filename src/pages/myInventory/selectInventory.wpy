
<style lang="stylus">
@import "./../../css/public.styl";
.myInventory_box{
  width: 100%;
  height: 100%;
  background: #F6F6F6;
  .myInventory_search{
    width: 100%;
    padding: 10px 10px 15px 0;
    background: #FFFFFF;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center; 
    .search_class{
      width: 68px;
      padding: 0 10px;
      height: 100%;
      font-size: 16px;
      font-weight: 400;
      color: #000000;
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
      word-break: break-all;
      &:after{
        content: '';
        display: inline-block;
        width: 0;
        height: 0;
        border-left: 4px solid transparent;
        border-right: 4px solid transparent;
        border-top: 6px solid #000000;
      }
    }
    .search_box{
      width: calc(100% - 68px);
      height: 40px;
    }
  }
  .myInventory_sort{
    width: 100%;
    height: 52px;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    .sort_item{
      width: calc(100% / 3);
      height: 100%;
      font-size: 16px;
      color: #666666;
      text-align: center;
      line-height: 52px;
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
      &.active{
        color: #00CEBE;
      }
      .item_img{
        width: 20px;
        height: 20px;
      }
    }
  }
  .myInventory_content{
    width: 100%;
    height: calc(100% - 60px - 52px - 65px);
    padding-bottom:10px;
    overflow-y: auto; 
    .content_item{
      border-top-left-radius: 4px;
      border-bottom-left-radius: 4px;
      margin-bottom: 10px;
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: center;
      .select_item{
        width: 35px;
        height: 100px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        .item_checked{
          width: 20px;
          height: 20px;
        }
      }
      .select_info{
        width: calc(100% - 35px);
        height: auto;
      }
      &:last-child{
        margin-bottom: 0;
      }
    }
  }
  .myInventory_nav{
    width: 100%;
    height: 60px;
    background: #FFFFFF;
    padding: 0 10px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center; 
    .nav_text{
      font-size: 15px;
      color:#333333;
      font-weight: bold; 
      .text_num{
        color: #F33C2E;
      }
    }
    .nav_btn{
      width: 90px;
      height: 34px;
      border-radius: 17px;
      background: linear-gradient(315deg, #00CEBE 0%, #00EFDC 100%);
      filter: blur(0px);
      color: #FFFFFF;
      font-size: 14px;
      font-weight: 500; 
      padding: 0;
      margin: 0;
    }
  }
}
</style>
<template>
  <div class="myInventory_box">
    <div class="myInventory_search">
      <div
        class="search_class"
        @click="searchClassBtn()"
      >{{searchClass}}</div>
      <div class="search_box">
        <Search @searchBtn="searchInput" />
      </div>
    </div>
    <ul class="myInventory_sort">
      <li
        class="sort_item {{currentKey === item.key?'active':''}}"
        @click="sortNav(item.key)"
        v-for="item in navList"
        :key="item.key"
      >
        <image
          class="item_img"
          :src="currentKey === item.key?defaultImage:image1"
          mode="widthFix"
          lazy-load="false"
        />
        <text class="item_text">{{item.text}}</text>
      </li>
    </ul>
    <ul class="myInventory_content">
      <li class="content_item" @click="selectItem(item,index)" :key="'order'+item.id" v-for="(item,index) in orderList">
        <div class="select_item">
          <image class="item_checked" :src="item.image" mode="widthFix" />
        </div>
        <div class="select_info">
          <orderItem :orderData="item"/>  
        </div>
      </li>
    </ul>
    <div class="myInventory_nav">
      <text class="nav_text">已选：{{3}}件商品</text>
      <button class="nav_btn" >选好了</button>
    </div>
  </div>
</template>

<script>
  import wepy from '@wepy/core';
  import {  mapState, mapActions } from '@wepy/redux';
  import store from './../../store';
  import { SETINVENTORY, SETQUERY } from './../../store/types';
  import { goodsGoodsList } from './../../request/api.js';
  wepy.page({
    store,
    options: {
      addGlobalClass: true
    },
    data: {
      navList:[
        {
          text:'热度',
          key:'heat',
        },{
          text:'库存量',
          key:'quantity',
        },{
          text:'到期时间',
          key:'expire_time',
        }
      ],
      searchClass: '全部',
      currentKey: '',
      defaultImage: '',
      image1: './../../image/sort.png',
      image2: './../../image/sort1.png',//升
      image3: './../../image/sort2.png',//降
      orderList:[],
      frequency: 2,// 点击次数
      query:{
        keyword: '',// 搜索关键字
        sortField: 'heat',//排序字段 heat 热度 quantity 库存量 expire_time 到期时间
        order: 'asc',//排序规则 desc 降序 asc 升序
        firstClassId:'',//一级分类id
        secondClassId:'',//二级分类id
      },
      checkedList:[],//选中的
    },
    computed: {
      ...mapState([ 'publics' ])
    },
    methods: {
      ...mapActions({
        setQuery: SETQUERY,
        setList: SETINVENTORY,
      }),
      // 选择当前
      selectItem(data,index){
        let check = data.checked === true ? false : true;
        this.orderList[index].checked = check;
        let a = this.checkedList.findIndex(item=>{
          return item.id === data.id;
        })
        if(a !== -1){
          this.checkedList.splice(a,1);
        }
        if(check){
          this.orderList[index].image = './../../image/checked1.png';
          this.checkedList.push(data);
        } else {
          this.orderList[index].image = './../../image/unchecked.png';
        }
        console.log('a--',a,data,index);
        console.log('this.checkedList',this.checkedList);
        console.log('this.orderList',this.orderList);
      },
      // 搜索输入值
      searchInput(value) {
        this.query.keyword = value;
        this.getGoodsGoodsList();
      },
      // 跳转分类
      searchClassBtn() {
        wx.navigateTo({
          url: '/pages/myInventory/classify'
        })
      },
      // 库存列表
      getGoodsGoodsList(){
        const { firstClassId, secondClassId } = this.publics.checkedSort;
        this.query = {
          ...this.query,
          firstClassId: firstClassId,
          secondClassId: secondClassId
        }
        this.setQuery({
          queryObj: this.query
        })
        goodsGoodsList(this.query).then(res => {
          const {code, data, message} = res;
          if(res.code === 10000){
            let price = 0;
            if (Array.isArray(data)){
              data.forEach((item) => {
                item.checked = false;
                item.image = './../../image/unchecked.png';
                price += (item.quantity * item.sellPrice * 100);
              })
            }
            this.orderList = data;
            this.collectPrice = price/100;
          }
        }).catch(err=> {
          const { message } = err;
          wx.showModal({
            title: '提示',
            content: message,
          })
        })
      },
      // 选择排序字段与顺序
      sortNav(key) {
        if(key === this.currentKey && this.frequency === 1){ //降
          this.frequency = 2;
          this.query.order = 'desc';
          this.defaultImage = this.image3;
        } else {// 升
          this.frequency = 1;
          this.query.order = 'asc';
          this.defaultImage = this.image2;
        }
        this.currentKey = key;
        this.query.sortField = key;
        this.getGoodsGoodsList();
      },
    },
    onLoad(options){
      this.query = { ...options };
    },
    onShow(){
      const { name } = this.publics.checkedSort;
      if(name !== ''){
        this.searchClass = name;
        this.getGoodsGoodsList();
      }
    },
    onReady(){
      this.sortNav(this.query.sortField);
    },
    onUnload(){
      this.setQuery({
        queryObj: this.query
      })
    },
  });
</script>
<config>
{
  navigationBarTitleText: '我的库存',
  disableScroll: true,
  usingComponents: {
    "orderItem": './../../components/orderItem',
    "Search": './../../components/searchInput',
  }
}
</config>
