
<style lang="stylus">
@import "./../../css/public.styl";
.Inventory_box{
  width: 100%;
  height: 100%;
  background: #F6F6F6;
  padding: 15px 10px;
  .Inventory_list{
    width: 100%;
    height: calc(100% - 50px);
    overflow-y: auto; 
    .list_item{
      width: 100%;
      height: auto;
      padding: 10px 15px 10px 10px;
      background: #ffffff;
      border-radius: 4px;
      box-shadow: 0px 2px 12px 5px rgba(180, 180, 180, 0.1); 
      overflow: hidden;
      margin-bottom: 10px;
    }
  }
  .Inventory_nav{
    width: 100%;
    height: 50px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center; 
  }
}
</style>
<template>
  <div class="Inventory_box">
    <ul class="Inventory_list">
      <li class="list_item" v-for="(item, index) in orderList" :key="'item'+index">
        <EditOrder
          :orderData="item"
          @editCart="editCartFun"
        />
      </li>
    </ul>
    <div class="Inventory_nav">
      <button
        class="form_btn"
        @click="formBtn()"
      >提交</button>
    </div>
  </div>
</template>

<script>
  import wepy from '@wepy/core';
  import { goodsQuantityUpdate } from './../../request/api.js';
  import {  mapState } from '@wepy/redux';
  import store from './../../store';
  wepy.page({
    store,
    options: {
      addGlobalClass: true
    },
    data: {
      orderList:[],
    },
    computed: {
      ...mapState([ 'inventoryList' ])
    },
    methods: {
      // 提交
      formBtn(){
        let data = [];
        this.orderList.forEach((item)=>{
          data.push({
            id: item.id,
            quantity: item.num
          })
        })
        goodsQuantityUpdate(data).then(res => {
          const {code, data, message} = res;
          if(res.code === 10000){
            wx.showToast({
              title: '修改成功',
              icon: 'success',
              duration: 2000,
              complete(){
                wx.navigateBack({
                  delta: getCurrentPages().length - 1
                })
              }
            })
          }
        }).catch(err=> {
          const { message } = err;
          wx.showModal({
            title: '提示',
            content: message,
          })
        })
      },
      // 添加购物车
      editCartFun(order){
        const Index = this.orderList.findIndex(item => item.id === order.id);
        if (Index === -1) {
          this.orderList.push(order);
        } else {
          if( order.num > 0){
            this.orderList.splice(Index,1,order);
          } else {
            this.orderList.splice(Index, 1);
          }
        }
      },
    },
    onLoad(options){
      // console.log('options',options)
    },
    onShow(){

    },
    onReady(){
      const { checedList } = this.inventoryList;
      checedList.forEach((item)=>{
        item.num = 1;
      })
      this.orderList = checedList;
    },
    onUnload(){

    },
  });
</script>
<config>
{
  navigationBarTitleText: '库存变动',
  disableScroll: true,
  usingComponents: {
    "EditOrder": './../../components/editOrder',
  }
}
</config>
