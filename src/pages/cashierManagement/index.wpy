
<style lang="stylus">
@import "./../../css/public.styl";
.cashier_container{
  width: 100%;
  height: 100%;
  background: #FFFFFF;
  position: relative;
  .cashier_info{
    width: 100%;
    background: linear-gradient(315deg, #00CEBE 0%, #00EFDC 100%);
    .head_box{
      width: 100%;
      height: 78px;
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      .head_btn{
        width: 16px;
        height: 16px;
        margin: 0 15px;
      }
      .head_left{
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        margin: 0 10px;
        .left_icon{
          width: 24px;
          height: 24px;
          padding-right: 5px;
        }
        .left_title{
          font-size: 18px;
          color: #ffffff;
          font-weight: 600;
        }
      }
    }
    .member_search{
      width: 100%;
      height: 60px;
      padding: 0 10px 20px;
    }
  }
  .cashier_nav{
    width: 100%;
    height: 52px;
    padding: 16px 0;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    .nav_item{
      font-size: 15px;
      color: #666666;
      &.active{
        font-szie: 18px;
        color: #333333;
        font-weight: bold;
        &:after{
          content:'';
          display: block; 
          margin-top: -6px;
          width: 100%;
          height: 4px;
          background: #00CEBE;
        }
      }
    }
  }
  .cashier_content{
    width: 100%;
    height: calc(100% - 78px - 60px - 52px - 60px);
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    .content_left{
      width: 70px;
      height: 100%;
      overflow-y: auto;
      .left_item{
        width: 70px;
        height: 70px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        .item_icon{
          width: 25px;
          height: 25px;
          background-color: #999999;
        }
        .item_text{
          font-size: 12px;
          color: #666666;
          font-weight: 400; 
        }
        &.active{
          background-color: #F0F0F0;
          .item_text{
            font-size: 13px;
            color: #333333;
            font-weight: 500; 
          }
        }
      }
    }
    .content_right{
      width: calc(100% - 70px);
      height: 100%;
      overflow-y: auto;
      .right_item{
        width: calc(100% - 20px);
        margin: 10px;
        padding: 10px;
        background: #FFFFFF;
        box-shadow: 0px 1px 6px 2px rgba(180, 180, 180, 0.1);
        border-radius: 4px;
      }
    }
  }
  .cashier_btn{
    width: 100%;
    height: 60px;
    padding: 0px 10px;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    z-index: 10000;
    position: relative;
    bottom: 0;
    .shopping_Cart{
      width: calc(100% - 85px - 85px);
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: center;
      .cart_left{
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: flex-start;
        padding-right: 20px;
        .cart_img{
          width: 30px;
          height: 30px;
        }
        .cart_Num{
          min-width: 20px;
          height: 20px;
          padding: 3px;
          margin-top: -4px;
          margin-left: 2px;
          background-color: #FFC400;
          border-radius: 10px;
          font-size: 12px;
          font-weight: 500;
          color: #FFFFFF;
          display: flex;
          flex-direction: row;
          justify-content: center;
          align-items: center;
        }  
      }
      .cart_total{
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: flex-start;
        font-size: 15px;
        font-weight: bold; 
        color: #333333;
        .total_num{
          &:before{
            content:'￥';
            font-size: 12px;
            color: #333333;
          }
        }
      }
    }
    .btn_item{
      width: 75px;
      height: 34px;
      margin-left: 10px;
      .btn{
        margin: 0;
        padding: 0;
        width: 100%;
        height: 34px;
        text-align: center;
        line-height: 34px;  
        border-radius: 17px;
        background: #FFFFFF;
        border: 1px solid #00CEBE;
        font-size: 14px;
        color: #00CEBE;
      }
      &:last-child{
        .btn{
          border: none;
          color: #FFFFFF;
          background: linear-gradient(315deg, #00CEBE 0%, #00EFDC 100%);
        }
      } 
    }
  }
}
.pop_Cart{
  z-index: 10; 
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(30, 30, 30, 0.5);
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  .pop_up_box{
    width: 100%;
    height: calc(300px + 10px + 60px);
    overflow-y: auto; 
    padding: 10px 10px 60px 10px;
    border-radius: 28px 28px 0px 0px;
    background: #FFFFFF;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    .pop_up_head{
      width: 100%;
      height: 50px;
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      .head_item{
        color: #333333;
        font-size: 15px;
        font-weight: bold;
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        .item_icon{
          width: 15px;
          height: 15px;
          margin-right: 5px;
        }
        .item_text{
          font-size: 12px;
          color: #999999;
          font-weight: 400; 
        }
      }
    }
    .pop_up_content{
      width: 100%;
      height: calc(100% - 50px);
      overflow-y: auto; 
      .content_item{
        width: 100%;
        height: 108px;
        padding: 10px;
        box-shadow: 0px 1px 6px 2px rgba(180, 180, 180, 0.1);
        border-radius: 4px;
      }
    }
  }
}
</style>
<template>
  <div class="cashier_container">
    <movable-area
      class="code_box"
    >
      <movable-view
        class="max"
        direction="all"
        :x="10"
        :y="200"
      >
        <image class="code_img" src="./../../image/code.png" mode="widthFix" />
      </movable-view>
    </movable-area>
    <!-- 弹框 -->
    <PopUp
      @popupBtn="popupBtns"
      :popupObj="popupObj"
    />
    <!-- 购物车 -->
    <div class="pop_Cart"
      v-show="showCart"
      @tap.stop="popupBox()"
    >
      <div class="pop_up_box" @tap.stop="Box()">
        <ul class="pop_up_head">
          <li class="head_item">共{{cartList.length}}件商品</li>
          <li 
            class="head_item"
            @tap.stop="emptyCart()"
          >
            <image class="item_icon" src="./../../image/delete.png" mode="widthFix" lazy-load="false" />
            <text class="item_text">清空购物车</text>
          </li>
        </ul>
        <ul class="pop_up_content">
          <li class="content_item" :key="'order'+item.id" v-for="item in cartList">
            <EditOrder 
              :orderData="item"
              @editCart="editCartFun"
            />
          </li>
        </ul>
      </div>
    </div>
    <div class="cashier_info">
      <div class="head_box">
        <div
          class="head_left"
          @click="gotoBack()"
        >
          <image class="left_icon" src="./../../image/site.png" mode="widthFix" lazy-load="false" />
          <div class="left_title">某某门店</div>  
        </div>
        <div class="head_btn"></div>
      </div>
      <div class="member_search">
        <FocusSearch
          @funfocusBtn="funfocus"
        />
      </div>
    </div>
    <ul class="cashier_nav">
      <li 
        class="nav_item {{currentNav === item.id &&'active'}}" 
        :key="'item'+item.id"
        v-for="item in navList"
        @click="navItem(item)"
      >{{item.name}}</li>
    </ul>
    <div class="cashier_content">
      <ul class="content_left">
        <li class="left_item {{currentItem === index &&'active'}}" 
          :key="'left'+index"
          v-for="(item,index) in goodsClassList"
          @click="leftItem(item,index)"
        >
          <image class="item_icon" src="{{}}" mode="widthFix" lazy-load="false" />
          <text class="item_text">{{item.name}}</text>
        </li>
      </ul>
      <ul class="content_right">
        <li 
          class="right_item" 
          :key="'order'+item.id" 
          v-for="item in orderList"
        >
          <EditOrder
            :orderData="{...item}"
            @editCart="editCartFun"
          />
        </li>
      </ul>
    </div>
    <ul class="cashier_btn">
      <li class="shopping_Cart">
        <div
          class="cart_left"
          @click="cartBtn(showCart)"
        >
          <image class="cart_img" src="./../../image/cart.png" mode="widthFix" lazy-load="false" />
          <div class="cart_Num" v-if="cartNum > 0">{{cartNum}}</div>  
        </div>
        <div class="cart_total">
          <text v-show="cartNum > 0">合计</text>
          <text v-show="cartNum > 0" class="total_num">{{(totalPrice)}}</text>
        </div>
      </li>
      <li class="btn_item">
        <button class="btn" v-show="false" @click="changePrice()">改价</button>
      </li>
      <li class="btn_item">
        <button
          class="btn"
          @click="goToCart()"
        >去结算</button>
      </li>
    </ul>
  </div>
</template>

<script>
  import wepy from '@wepy/core';
  import {  mapState, mapActions } from '@wepy/redux';
  import store from './../../store';
  import { SETCART } from './../../store/types';
  import { goodsAllClasses, goodsGoodsList } from './../../request/api.js';
  wepy.page({
    store,
    options: {
      addGlobalClass: true
    },
    data: {
      navList:[],
      currentNav: 1,
      goodsClassList: [],
      currentItem: 0,
      popupObj: {
        popupType: 1,
        presentMoney: 0,
        isShow: false,
      },
      orderList: [],//商品列表
      query:{
        keyword: '',// 搜索关键字
        sortField: '',//排序字段 heat 热度 quantity 库存量 expire_time 到期时间
        order:'',//排序规则 desc 降序 asc 升序
        firstClassId:'',//一级分类id
        secondClassId:'',//二级分类id
      },
      showCart: false,//购物车显隐
      cartNum: 0,
      totalPrice: 0,//
      cartList: [],//购物车
    },
    computed: {
      ...mapState([ 'cart' ])
    },
    methods: {
      ...mapActions({
        setCart: SETCART,
      }),
      // 关闭购物车
      popupBox(){
        this.showCart = !this.showCart;
      },
      // 无关紧要
      Box(){
        return;
      },
      // 修改商品列表
      changedListGoods(order){
        const Index = this.orderList.findIndex(item => item.id === order.id);
        this.orderList.splice(Index,1,order);
      },
      // 添加购物车
      editCartFun(order){
        this.changedListGoods(order);
        const Index = this.cartList.findIndex(item => item.id === order.id);
        if (Index === -1) {
          this.cartList.push(order);
        } else {
          if( order.num > 0){
            this.cartList.splice(Index,1,order);
          } else {
            this.cartList.splice(Index, 1);
          }
        }
        let total = 0;
        let price = 0;
        this.cartList.forEach((item)=>{
          total += item.num;
          price += item.num * (item.sellPrice*1000);
        })
        this.cartNum = total;
        this.totalPrice = price/1000; 
      },
      // 后退
      gotoBack(){
        wx.navigateBack({
          delta: 1
        })
      },
      // 去购物车
      goToCart(){
        this.setCart({
          cart:{
            Num: this.cartNum,
            List: this.cartList,
            total: this.totalPrice,  
          }
        })
        if(this.cartList.length === 0){
          wx.showModal({
            title: '提示',
            content: '请选择商品',
          })
          return;
        }
        wx.navigateTo({
          url: '/pages/cashierManagement/cart'
        })
      },
      // 修改价格
      changePrice(){
        this.popupObj = {
          popupType: 1,
          isShow: true,
          presentMoney: this.totalPrice,
        };
      },
      // 弹框按钮
      popupBtns({bool = false, Num = 0}){
        this.popupObj.isShow = false;
        if(bool){  // 点击确定
          this.totalPrice = Num;
        }
      },
      // 清空购物车
      emptyCart(){
        this.cartList = [];
        this.cartNum = 0;
        this.totalPrice = 0;
        this.orderList.forEach((item,index)=>{
          const orderItem = item;
          if(item.num&&item.num>0){
            orderItem.num = 0;
            this.orderList.splice(index,1,orderItem);
          }
        })
      },
      // 显隐购物车
      cartBtn(Bool){
        this.showCart = !Bool;
      },
      // 点击导航选择列表
      navItem(data){
        this.currentNav = data.id;
        this.goodsClassList = data.goodsClassSeconds;
        this.currentItem = 0;
        let firstClassId = this.goodsClassList[this.currentItem].firstClassId;
        let secondClassId = this.goodsClassList[this.currentItem].id;
        this.getGoodsGoodsList({firstClassId: firstClassId,secondClassId: secondClassId});
      },
      // 选择left
      leftItem(item,index){
        this.currentItem = index;
        let firstClassId = this.goodsClassList[this.currentItem].firstClassId;
        let secondClassId = this.goodsClassList[this.currentItem].id;
        this.getGoodsGoodsList({firstClassId: firstClassId, secondClassId: secondClassId});
      },
      // 查询所有分类
      getGoodsAllClasses(){
        goodsAllClasses().then(res => {
          const {code, data, message} = res;
          if(res.code === 10000){
            this.navList = data;
            this.goodsClassList = data[0].goodsClassSeconds;
            const list = data[0].goodsClassSeconds
            if(list.length !== 0){
              this.getGoodsGoodsList({firstClassId: list[0].firstClassId,secondClassId: list[0].id});
            }
          }
        }).catch(err=> {
          console.log(err)
        })
      },
      // 库存列表
      getGoodsGoodsList(query){
        goodsGoodsList(query).then(res => {
          const {code, data, message} = res;
          if(res.code === 10000){
            this.orderList = data;
          }
        }).catch(err=> {
          console.log(err)
        })
      },
      funfocus(data) {
        wx.navigateTo({
          url: '/pages/cashierManagement/search'
        })
      },
    },
    onLoad(options){
      // console.log('options',options)
    },
    onShow(){
      const { cart:{ Num, List, total } } = this.cart;
      console.log('Num, List, total',Num, List, total)
      this.cartNum = Num;
      this.totalPrice = total;
      this.cartList = List;
      this.cartList.forEach(item=>{
        this.changedListGoods(item);
      })
    },
    onReady(){
      this.getGoodsAllClasses();
    },
    onUnload(){
      this.showCart = false;
    },
  });
</script>
<config>
{
  navigationBarBackgroundColor: '#00EFDC',
  navigationBarTextStyle: 'white',
  navigationStyle: 'custom',
  disableScroll: true,
  usingComponents: {
    "FocusSearch": './../../components/focusSearchInput',
    "EditOrder": './../../components/editOrder',
    "PopUp": './../../components/popUp',
  }
}
</config>
