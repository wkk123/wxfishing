
<style lang="stylus">
@import "./../../css/public.styl";
.cashier_container{
  width: 100%;
  height: 100%;
  background: #FFFFFF;
  .cashier_content{
    width: 100%;
    height: calc(100% - 60px);
    .content_right{
      width: 100%;
      height: 100%;
      overflow-y: auto;
      .right_item{
        width: calc(100% - 20px);
        margin: 10px;
        padding: 10px;
        background: #FFFFFF;
        box-shadow: 0px 1px 6px 2px rgba(180, 180, 180, 0.1);
        border-radius: 4px;
      }
    }
  }
  .cashier_btn{
    width: 100%;
    height: 60px;
    padding: 0px 10px;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    z-index: 10000;
    position: relative;
    bottom: 0;
    .shopping_Cart{
      width: calc(100% - 85px - 85px);
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      .cart_left{
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: flex-start;
        .cart_img{
          width: 30px;
          height: 30px;
        }
        .cart_Num{
          min-width: 20px;
          height: 20px;
          padding: 5px;
          margin-top: -4px;
          margin-left: 2px;
          background-color: #FFC400;
          border-radius: 10px;
          font-size: 12px;
          font-weight: 500;
          color: #FFFFFF;
          display: flex;
          flex-direction: row;
          justify-content: center;
          align-items: center;
        }  
      }
      .cart_total{
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: flex-start;
        font-size: 15px;
        font-weight: bold; 
        color: #333333;
        .total_num{
          &:before{
            content:'￥';
            font-size: 12px;
            color: #333333;
          }
        }
      }
    }
    .btn_item{
      width: 75px;
      height: 34px;
      margin-left: 10px;
      .btn{
        margin: 0;
        padding: 0;
        width: 100%;
        height: 34px;
        text-align: center;
        line-height: 34px;  
        border-radius: 17px;
        background: #FFFFFF;
        border: 1px solid #00CEBE;
        font-size: 14px;
        color: #00CEBE;
      }
      &:last-child{
        .btn{
          border: none;
          color: #FFFFFF;
          background: linear-gradient(315deg, #00CEBE 0%, #00EFDC 100%);
        }
      } 
    }
  }
}
</style>
<template>
  <div class="cashier_container">
        <movable-area
      class="code_box"
    >
      <movable-view
        class="max"
        direction="all"
        :x="10"
        :y="200"
      >
        <image class="code_img" @click="scanCodeAdd()" src="./../../image/code.png"  />
      </movable-view>
    </movable-area>
    <!-- 弹框 -->
    <PopUp
      @popupBtn="popupBtns"
      :popupObj="popupObj"
    />
    <div class="cashier_content">
      <ul class="content_right">
        <li class="right_item" v-for="(item,index) in cartList" :key="'item'+index">
          <EditOrder
            :editType="1"
            :orderData="item"
            @editCart="editCartFun"
          />
        </li>
      </ul>
    </div>
    <ul class="cashier_btn">
      <li class="shopping_Cart">
        <div
          class="cart_left"
          v-if="false"
        >
          <image v-if="false" class="cart_img" src="./../../image/cart.png"  lazy-load="false" />
          <div v-if="false" class="cart_Num">{{cartNum}}</div>  
        </div>
        <div class="cart_total">
          <text>合计</text>
          <text class="total_num">{{totalPrice}}</text>
        </div>
      </li>
      <li class="btn_item">
        <button class="btn" @click="changePrice()">改价</button>
      </li>
      <li class="btn_item">
        <button
          @click="placeAnOrder()"
          class="btn"
        >去结算</button>
      </li>
    </ul>
  </div>
</template>

<script>
  import wepy from '@wepy/core';
  import {  mapState, mapActions } from '@wepy/redux';
  import store from './../../store';
  import { SETCART, SETORDER } from './../../store/types';
  import { goodsAllGoodsList, orderCreate } from './../../request/api.js';
  wepy.page({
    store,
    options: {
      addGlobalClass: true
    },
    data: {
      cartNum: 0,
      totalPrice: 0,//
      showCart: false,//购物车显隐
      cartList: [],
      popupObj: {
        popupType: 1,
        presentMoney: 0,
        isShow: false,
      },
    },
    computed: {
      ...mapState([ 'cart' ])
    },
    methods: {
      ...mapActions({
        setCart: SETCART,
        setOrder: SETORDER,
      }),
      // 扫码添加
      scanCodeAdd(){
        const that = this;
        wx.scanCode({
          onlyFromCamera: true,
          // scanType:['pdf417'],
          success (res) {
            console.log(res)
            that.searchCodeOrder(res)
          }
        })
      },
      // 通过条形码搜索商品并添加
      searchCodeOrder(keyword){
        goodsAllGoodsList({
          field:'number',
          keyword: keyword,
        }).then(res=>{
          const {code, data, message} = res;
          if(res.code === 10000){
            let order = data[0];
            const Index = this.cartList.findIndex(item => item.id === order.id);
            if(Index === -1){
              order.num = 1;
              this.editCartFun(order);
            } else {
              order.num += 1;
              this.editCartFun(order);
            }
          }
        })
      },
      // 点击下单
      placeAnOrder(){
        let goodsList = [];
        goodsList = this.cartList.map(item=>{
          return {
            id: item.id,
            quantity: item.num
          }
        })
        this.setOrder({
          placeAnOrder: {
            totalMoney: this.totalPrice,
            goodsList: goodsList,
          }
        })
        this.orderFun({
          totalMoney: this.totalPrice,
          goodsList: goodsList,
        })

      },
      // 下单函数
      orderFun(placeAnOrder){
        const that = this;
        orderCreate(placeAnOrder).then(res => {
          const {code, data, message} = res;
          console.log('res1',res)
          wx.showLoading({
            title: '下单中...',
            complete(){
              if(res.code === 10000){
                that.setCart({
                  cart:{
                    Num: 0,
                    List: [],
                    total: 0,
                  }
                })
                wx.hideLoading()
                console.log('res000',res)
                const { orderId } = res.data;
                wx.redirectTo({
                  url: `/pages/cashierManagement/clearingOrder?id=${orderId}`
                })
              }
            }
          })
        }).catch(err=> {
          console.log(err)
          if( err && err.message ){
            wx.showToast({
              title: err.message,
              icon: 'none',
              duration: 2000
            })  
          }
        })
      },
      // 添加购物车
      editCartFun(order){
        const Index = this.cartList.findIndex(item => item.id === order.id);
        if (Index === -1) {
          this.cartList.push(order);
        } else {
          if( order.num > 0){
            this.cartList.splice(Index,1,order);
          } else {
            this.cartList.splice(Index, 1);
          }
        }
        let total = 0;
        let price = 0;
        this.cartList.forEach((item)=>{
          total += item.num;
          price += item.num * (item.sellPrice*1000);
        })
        this.cartNum = total;
        this.totalPrice = price/1000; 
      },
      // 弹框按钮
      popupBtns({bool = false, Num = 0}){
        this.popupObj.isShow = false;
        if(bool){  // 点击确定
          this.totalPrice = Num;
        }
      },
      // 修改价格
      changePrice(){
        this.popupObj = {
          popupType: 1,
          isShow: true,
          presentMoney: this.totalPrice,
        };
      },
    },
    onLoad(options){
      // console.log('options',options)
    },
    onShow(){

    },
    onReady(){
      const { cart:{ Num, List, total } } = this.cart;
      this.cartNum = Num;
      this.totalPrice = total;
      this.cartList = List;
    },
    onUnload(){
      this.setCart({
        cart:{
          Num: this.cartNum,
          List: this.cartList,
          total: this.totalPrice,  
        }
      })
    },
  });
</script>
<config>
{
  navigationBarTitleText: '购物车',
  disableScroll: true,
  usingComponents: {
    "EditOrder": './../../components/editOrder',
    "PopUp": './../../components/popUp',
  }
}
</config>
