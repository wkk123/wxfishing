
<style lang="stylus">
@import "./../../css/public.styl";
.payWay_box{
  width: 100%;
  height: 100%;
  background: #FFFFFF;
  overflow-y: auto;
  .payWay_content{
    width: 100%;
    height: auto;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    .payWay_info{
      width: 100%;
      height: 175px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      .info_title{
        color: #999999;
        font-size: 16px;
        font-weight: 400;
        line-height: 22px;
      }
      .info_price{
        color: #333333;
        font-size: 32px;
        font-weight: 800;
        &:before{
          content: '￥';
          color: #333333;
          font-size: 23px;
          font-weight: 800;
          line-height: 22px;
        }
      }
      .info_time{
        color: #999999;
        font-size: 12px;
        font-weight: 400;
        line-height: 16px;
      }
    }
    .payWay_list{
      width: calc(100% - 20px);
      height: auto;
      margin: 0 10px;
      .payWay_item{
        width: 100%;
        height: 75px;
        background: #FFFFFF;
        box-shadow: 0px 1px 6px 2px rgba(180, 180, 180, 0.1);
        border-radius: 4px;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        padding: 0 15px;
        margin-bottom: 15px;
        .item_left{
          display: flex;
          flex-direction: row;
          justify-content: flex-start;
          align-items: center;
          .item_icon{
            width: 30px;
            height: 30px;
            margin-right: 15px;
          }
          .item_text{
            color: #333333;
            font-size: 16px;
            font-weight: 400;
          }
        }
        .item_selected{
          width: 20px;
          height: 20px;
        }
      }
    }
  }
}
</style>
<template>
  <div class="payWay_box">
    <div class="payWay_content">
      <div class="payWay_info">
        <text class="info_title">支付金额</text>
        <text class="info_price">{{totalMoney}}</text>
        <!-- <text class="info_time">支付剩余时间：14:57</text> -->
      </div>
      <ul class="payWay_list">
        <li class="payWay_item" @click="selectedBtn(item.type)" v-for="item in wayList">
          <div class="item_left" >
            <image
              class="item_icon"
              :src="item.icon"
               
            />
            <text class="item_text">{{item.text}}</text>
          </div>
          <image class="item_selected" :src="checked === item.type?checkedImg:unchecked"  />
        </li>
      </ul>
    </div>
  </div>
</template>

<script>
  import wepy from '@wepy/core';
  import { mapState } from '@wepy/redux';
  import store from './../../store';
  import { orderCreate, orderOfflinePay } from './../../request/api.js';
  wepy.page({
    store,
    options: {
      addGlobalClass: true
    },
    data: {
      checked: null,
      checkedImg: '../../image/checked2.png',
      unchecked: '../../image/unchecked.png',
      wayList:[
        {
          type: 1,
          icon: '../../image/wx.png',
          text: '微信支付',
        },
        {
          type: 2,
          icon: '../../image/yue-5.png',
          text: '线下支付',
        }
      ],
      order: {}, //订单信息
      totalMoney: 0,
    },
    computed: {
      ...mapState([ 'cart' ])
    },
    methods: {
      // 下单
      orderFun(type){
        orderCreate(this.order).then(res => {
          const {code, data, message} = res;
          if(res.code === 10000){
            console.log('res',res)
            const { orderId } = res.data;
            if(type === 1){
              wx.navigateTo({
                url: `/pages/cashierManagement/clearingOrder?id=${orderId}`
              })
            } else {
              this.offlinePayment(orderId)
            }
          }
        }).catch(err=> {
          console.log(err)
          // wx.navigateTo({
          //   url: '/pages/cashierManagement/payWay'
          // })
        })
      },
      // 选择支付方式
      selectedBtn(type) {
        this.checked = type;
        this.orderFun(type)
      },
      // 线下支付
      offlinePayment(orderId){
        const openid = wx.getStorageSync('openid');
        orderOfflinePay({
          id: orderId,
          openid: openid
        }).then(res => {
          const {code, data, message} = res;
          if(res.code === 10000){
            console.log('res',res)
            wx.navigateTo({
              url: `/pages/cashierManagement/clearingOrder?id=${-1}`
            })
          }
        }).catch(err=> {
          const { message } = err;
          if( message ){
            wx.showToast({
              title: message,
              icon: 'error',
              duration: 2000
            })  
          }
        })
      },
    },
    onLoad(options){
      // console.log('options',options)
    },
    onShow(){
      
    },
    onReady(){
      const { placeAnOrder } = this.cart;
      console.log('placeAnOrder',placeAnOrder)
      this.order = placeAnOrder;
      this.totalMoney = placeAnOrder.totalMoney;
    },
    onUnload(){

    },
  });
</script>
<config>
{
  navigationBarTitleText: '支付订单',
  disableScroll: true,
  usingComponents: {

  }
}
</config>
