
<style lang="stylus">
@import "./../../css/public.styl";
.brand_box{
  width: 100%;
  height: 100%;
  padding: 0px 0px 15px;
  .brand_list{
    width: 100%;
    height: calc(100% - 50px);
    overflow-y: auto;   
    .list_item{
      width: calc(100% - 20px);
      height: auto;
      margin: 5px 10px 5px;
      background: #FFFFFF;
      border-radius: 4px;
      box-shadow: 0px 2px 12px 5px rgba(180, 180, 180, 0.1);   
      padding: 10px 0 10px 10px; 
      .item_title{
        font-size: 16px;
        color: #000000;
        font-weight: 500;
        padding-bottom: 8px;
      }
      .content_item{
        padding: 2px 0;
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;   
        .item_icon{
          width: 15px;
          height: 15px;
          margin-right: 5px;
        }
        .item_text{
          font-size: 12px;
          color: #999999;
        }
      }
    }
  }
  .brand_nav{
    position: fixed;
    left: 10px;
    right: 10px;
    bottom: 10px;
    width: calc(100% - 20px); 
  }
}
</style>
<template>
  <div class="container">
    <div class="brand_box">
      <scroll-view
        class="brand_list"
        scroll-y="true"
        bindscrolltolower="lowerList"
      >
        <view
          class="list_item"
          :key="'item'+index"
          v-for="(item,index) in brandList"
          @click="editBrand(item)"
        >
          <text class="item_title">{{item.name}}</text>
          <ul class="item_content">
            <li class="content_item">
              <image class="item_icon" src="../../image/brand1.png" mode="widthFix" lazy-load="false" />
              <text class="item_text">{{item.productLocation}}</text>
            </li>
            <li class="content_item">
              <image class="item_icon" src="../../image/brand2.png" mode="widthFix" lazy-load="false" />
              <text class="item_text">{{item.deliveryAddress}}</text>
            </li>
            <li class="content_item">
              <image class="item_icon" src="../../image/brand3.png" mode="widthFix" lazy-load="false" />
              <text class="item_text">{{item.contactPhone}}</text>
            </li>
            <li class="content_item">
              <image class="item_icon" src="../../image/brand4.png" mode="widthFix" lazy-load="false" />
              <text class="item_text">{{item.remark}}</text>
            </li>
          </ul>
        </view>
      </scroll-view>
      <button
        class="brand_nav form_btn"
        @click="addBrand"
      >添加品牌</button>
    </div>
  </div>
</template>

<script>
  import wepy from '@wepy/core';
  import { brandList } from './../../request/api.js';
  wepy.page({
    options: {
      addGlobalClass: true
    },
    data: {
      query:{
        page: 1,
        size: 10,
      },
      brandList:[],
      isUpload: true,
    },
    computed: {

    },
    methods: {
      // 编辑品牌
      editBrand(data){
        wx.navigateTo({
          url: `/pages/brand/info?type=${1}&id=${data.id}`
        })
      },
      // 添加品牌
      addBrand(){
        wx.navigateTo({
          url: `/pages/brand/info?type=${2}`
        })
      },
      // 上拉
      lowerList(){
        this.getBrandList();
      },
      // 获取品牌列表
      getBrandList(){
        if(!this.isUpload){
          return;
        }
        brandList(this.query).then(res => {
          const {code, data, message} = res;
          if(res.code === 10000){
            this.brandList = [ ...this.brandList, ...data ];
            if(data.length === 10) {
              this.query.page += 1;
            } else {
              this.isUpload = false;
            }
          }
        }).catch(err=> {
          wx.showModal({
            title: '提示',
            content: message,
          })
        })
      }
    },
    onLoad(options){
      // console.log('options',options)
    },
    onShow(){
      
    },
    onReady(){
      this.getBrandList();
    },
    onUnload(){

    },
  });
</script>
<config>
{
  navigationBarTitleText: '品牌管理',
  disableScroll: true,
  usingComponents: {

  }
}
</config>
